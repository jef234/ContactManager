{"version":3,"sources":["logo.svg","Provider/Context.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","id","payload","Provider","name","email","phone","dispatch","setState","value","this","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","contact","className","onClick","style","cursor","bind","float","color","protoType","PropTypes","object","isRequired","Contacts","Fragment","map","key","TextInputGroup","label","placeholder","onChange","error","onKeyUp","htmlFor","classnames","defaultProps","AddContact","errors","validate_keys","errName","errEmail","errPhone","errFlag","onSubmit","preventDefault","uuid","history","push","target","Header","branding","width","src","logo","alt","href","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","prototype","string","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.502af984.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contacts => contacts.id !== action.payload\r\n                )\r\n\r\n            }\r\n        case 'ADD_CONTACT':\r\n                return {\r\n                    ...state,\r\n                    contacts: [action.payload, ...state.contacts]\r\n                }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                email: 'Jdoe@gmail.com',\r\n                phone: '555-555-5555'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Karen Williams',\r\n                email: 'Karen@gmail.com',\r\n                phone: '222-222-2222'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Henry Johnson',\r\n                email: 'Henry@gmail.com',\r\n                phone: '111-111-1111'\r\n            }\r\n        ],\r\n        dispatch: action=> this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Provider/Context';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    }\r\n\r\n    onDeleteClick = (id,dispatch) => {\r\n        dispatch({type:'DELETE_CONTACT', payload: id})\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}\r\n                                <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }} />\r\n                                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}></i>\r\n                            </h4>\r\n                            {showContactInfo ?\r\n                                (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>)\r\n                                : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.protoType = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Provider/Context'\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3\">\r\n                                <span className=\"text-danger\">Contacts</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nfunction TextInputGroup({\r\n    label, name, value, placeholder, type, onChange, error, onKeyUp\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} \r\n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                placeholder={placeholder} value={value} onChange={onChange} onKeyUp={onKeyUp}/>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n    onKeyUp: PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Provider/Context'\r\nimport { v4 as uuid } from 'uuid'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    validate_keys = () => {\r\n        const { name, email, phone } = this.state\r\n        let errName, errEmail, errPhone, errFlag = 0\r\n        if (name === '') { errName = 'Name is required'; errFlag = 1 }\r\n        if (email === '') { errEmail = 'Email is required'; errFlag = 1 }\r\n        if (phone === '') { errPhone = 'Phone is required'; errFlag = 1 }\r\n\r\n        this.setState({ errors: { name: errName, email: errEmail, phone: errPhone } })\r\n        return errFlag\r\n    }\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault()\r\n        const { name, email, phone } = this.state\r\n\r\n        if (this.validate_keys() === 1) {\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        dispatch({ type: 'ADD_CONTACT', payload: newContact })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onKeyUp = e => this.validate_keys()\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3 mt-2\" >\r\n                                <span className=\"text-danger\">Add</span> Contact\r\n                        </h1>\r\n                            <div className=\"card mb-3\">\r\n\r\n                                {/* <div className=\"card-header\">\r\n                                Jef\r\n                            </div> */}\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Name..\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter Email..\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Phone..\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../logo.svg';\r\n\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-2\">\r\n            <div className=\"container\">\r\n                <img width=\"40\" src={logo} alt=\"React Logo\" />\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <button class=\"navbar-toggler\" id=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\"\r\n                    aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse header\" id=\"navbarColor01\">\r\n                    <ul className=\"navbar-nav mr-auto justify-content-end\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\" /> Home</Link>\r\n                        </ li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/Contacts/Add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus-square\" /> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/About\" className=\"nav-link\">\r\n                                <i className=\"fas fa-info-circle\" /> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n}\r\n\r\nHeader.prototype = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">About</span> Contact Manager</h2>\r\n                <p className=\"lead\">Simple app to mange contacts</p>\r\n                <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">404</span> Page Not Found</h2>\r\n                <p className=\"lead\">Sorry, that page does not exist</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './Components/Contacts/Contacts';\nimport AddContact from './Components/Contacts/AddContact';\nimport Header from './Components/Layout/Header';\nimport About from './Components/pages/About'\nimport NotFound from './Components/pages/NotFound'\nimport { Provider } from './Provider/Context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/Contacts/Add\" component={AddContact} />\n              <Route exact path=\"/About\" component={About} />\n              <Route exact component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}