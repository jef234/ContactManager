{"version":3,"sources":["logo.svg","Provider/Context.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","id","payload","Provider","dispatch","setState","axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","contact","name","email","phone","className","onClick","style","cursor","bind","float","color","protoType","PropTypes","object","isRequired","Contacts","Fragment","map","key","TextInputGroup","label","placeholder","onChange","error","onKeyUp","htmlFor","classnames","defaultProps","AddContact","errors","validate_keys","errName","errEmail","errPhone","errFlag","onSubmit","preventDefault","newContact","post","history","push","target","Header","branding","navShow","width","src","logo","alt","href","console","log","to","prototype","string","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3749db3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contacts => contacts.id !== action.payload\r\n                )\r\n\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(res => this.setState({ contacts: res.data }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../Provider/Context'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    onShowClick = e => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    }\r\n\r\n    onDeleteClick = (id,dispatch) => {\r\n        axios\r\n            .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .then(res=>dispatch({type:'DELETE_CONTACT', payload: id}))\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}&nbsp;\r\n                                <i onClick={this.onShowClick} className={showContactInfo ? \"fas fa-caret-square-up\":\"far fa-caret-square-down\"} style={{ cursor: 'pointer' }} />\r\n                                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} />\r\n                            </h4>\r\n                            {showContactInfo ?\r\n                                (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>)\r\n                                : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.protoType = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../Provider/Context'\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3\">\r\n                                <span className=\"text-danger\">Contacts</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nfunction TextInputGroup({\r\n    label, name, value, placeholder, type, onChange, error, onKeyUp\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} \r\n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n                placeholder={placeholder} value={value} onChange={onChange} onKeyUp={onKeyUp}/>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n    onKeyUp: PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Provider/Context'\r\nimport { v4 as uuid } from 'uuid'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    validate_keys = () => {\r\n        const { name, email, phone } = this.state\r\n        let errName, errEmail, errPhone, errFlag = 0\r\n        if (name === '') { errName = 'Name is required'; errFlag = 1 }\r\n        if (email === '') { errEmail = 'Email is required'; errFlag = 1 }\r\n        if (phone === '') { errPhone = 'Phone is required'; errFlag = 1 }\r\n\r\n        this.setState({ errors: { name: errName, email: errEmail, phone: errPhone } })\r\n        return errFlag\r\n    }\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault()\r\n        const { name, email, phone } = this.state\r\n\r\n        if (this.validate_keys() === 1) {\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        axios\r\n            .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n            .then(res=>dispatch({ type: 'ADD_CONTACT', payload: res.data }))\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/ContactManager/')\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n    onKeyUp = e => this.validate_keys()\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3 mt-2\" >\r\n                                <span className=\"text-danger\">Add</span> Contact\r\n                        </h1>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Name..\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter Email..\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Phone..\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n                                            onKeyUp={this.onKeyUp}\r\n                                        />\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../logo.svg';\r\nimport classnames from 'classnames'\r\n\r\nconst Header = (props) => {\r\n    let { branding, navShow } = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-2\">\r\n            <div className=\"container\">\r\n                <img width=\"50\" className=\"text-danger\" src={logo} alt=\"React Logo\" />\r\n                <a href=\"/ContactManager\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <button className=\"navbar-toggler\" id=\"navbar-toggler\" type=\"button\" onClick={() => { console.log(navShow);navShow = !navShow; console.log(navShow)}}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                {/* <div className='collapse navbar-collapse justify-content-end',}> */}\r\n                <div className={classnames('collapse navbar-collapse justify-content-end', { 'd-block': navShow })}>\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/ContactManager\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\" /> Home</Link>\r\n                        </ li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/ContactManager/Contacts/Add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus-square\" /> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/ContactManager/About\" className=\"nav-link\">\r\n                                <i className=\"fas fa-info-circle\" /> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\",\r\n    navShow: true\r\n}\r\n\r\nHeader.prototype = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">About</span> Contact Manager</h2>\r\n                <p className=\"lead\">Simple app to mange contacts</p>\r\n                <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"display-4 mb-3\"><span className=\"text-danger\">404</span> Page Not Found</h2>\r\n                <p className=\"lead\">Sorry, that page does not exist</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './Components/Contacts/Contacts';\nimport AddContact from './Components/Contacts/AddContact';\nimport Header from './Components/Layout/Header';\nimport About from './Components/pages/About'\nimport NotFound from './Components/pages/NotFound'\nimport { Provider } from './Provider/Context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/ContactManager\" component={Contacts} />\n              <Route exact path=\"/ContactManager/Contacts/Add\" component={AddContact} />\n              <Route exact path=\"/ContactManager/About\" component={About} />\n              <Route exact component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}